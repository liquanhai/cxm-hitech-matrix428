<?xml version="1.0" encoding="UTF-8"?>
<bag xmlns:boolean="http://www.w3.org/2001/XMLSchema#boolean" xmlns:int="http://www.w3.org/2001/XMLSchema#int">
 <internal>
  <id>tc3</id>
  <name>tc3.name</name>
  <shortName>tc3.name</shortName>
  <description>tc3.description</description>
  <alias>ti3</alias>
  <abbreviation>ti3</abbreviation>
  <int:schemaVersion>1</int:schemaVersion>
  <int:contentVersion>1</int:contentVersion>
  <property name="helpId">intel.che.nem.analysis_type_threading_pane_f3120</property>
 </internal>
 <knobs>
  <booleanKnob id="terminate_on_deadlock" cliName="terminate-on-deadlock" displayName="knob.terminate_on_deadlock.name">
   <description>knob.terminate_on_deadlock.description</description>
   <boolean:defaultValue>false</boolean:defaultValue>
  </booleanKnob>
  <enumKnob id="stack_depth" cliName="stack-depth" displayName="knob.stack_depth.name">
   <description>knob.stack_depth.description</description>
   <values>
    <value displayName="knob.stack_depth.1">1</value>
    <value displayName="knob.stack_depth.8">8</value>
    <value displayName="knob.stack_depth.16">16</value>
    <value displayName="knob.stack_depth.24">24</value>
    <value displayName="knob.stack_depth.32">32</value>
    <defaultValue>16</defaultValue>
   </values>
  </enumKnob>
  <enumKnob id="analysis_scope" cliName="scope" displayName="knob.tcscope.name">
   <description>knob.tcscope.description</description>
   <values>
    <value displayName="knob.tcscope.l1">l1</value>
    <value displayName="knob.tcscope.l2">l2</value>
    <defaultValue>l1</defaultValue>
   </values>
  </enumKnob>
  <booleanKnob id="duplicate_elimination" cliName="duplicate-elimination" displayName="knob.duplicate_elimination.name">
   <description>knob.duplicate_elimination.description</description>
   <boolean:defaultValue>true</boolean:defaultValue>
  </booleanKnob>
  <enumKnob id="appdebug" cliName="appdebug" displayName="knob.appdebug.name" boolean:visible="false">
   <description>knob.appdebug.description</description>
   <values>
    <value cliName="off">knob.appdebug.off</value>
    <value cliName="on-error">knob.appdebug.on_error</value>
    <value cliName="on-start">knob.appdebug.on_start</value>
    <defaultValue>knob.appdebug.off</defaultValue>
   </values>
  </enumKnob>
  <rule>
   <ruleExpr>$OS != Windows</ruleExpr>
   <enumKnob idToOverwrite="appdebug" boolean:visible="true"/>
  </rule>
 </knobs>
 <analysis>
  <collector id="runtc">
   <binaryName>runtc</binaryName>
   <boolean:collectorKnob knob="cknob_check_deadlock">true</boolean:collectorKnob>
   <collectorKnob knob="cknob_terminate_on_deadlock">$terminate_on_deadlock</collectorKnob>
   <boolean:collectorKnob knob="cknob_check_cross_thread_stack_access">true</boolean:collectorKnob>
   <boolean:collectorKnob knob="cknob_check_datarace">true</boolean:collectorKnob>
   <collectorKnob knob="cknob_duplicate_elimination">$duplicate_elimination</collectorKnob>
  </collector>
  <rules>
   <rule>
    <ruleExpr>$analysis_scope == l1</ruleExpr>
    <collector idToAppend="runtc">
     <collectorKnob knob="cknob_resolution">fine</collectorKnob>
    </collector>
   </rule>
   <rule>
    <ruleExpr>$analysis_scope == l2</ruleExpr>
    <collector idToAppend="runtc">
     <boolean:collectorKnob knob="cknob_detect_races_on_stack_access">true</boolean:collectorKnob>
     <collectorKnob knob="cknob_resolution">superfine</collectorKnob>
     <boolean:collectorKnob knob="cknob_defer_memory_check">false</boolean:collectorKnob>
    </collector>
   </rule>
   <rule>
    <ruleExpr>$stack_depth == 1</ruleExpr>
    <collector idToAppend="runtc">
     <int:collectorKnob knob="cknob_stack_depth">1</int:collectorKnob>
     <boolean:collectorKnob knob="cknob_save_stack_on_first_access">false</boolean:collectorKnob>
     <boolean:collectorKnob knob="cknob_save_stack_on_allocation">false</boolean:collectorKnob>
    </collector>
    <else>
     <collector idToAppend="runtc">
      <boolean:collectorKnob knob="cknob_save_stack_on_first_access">true</boolean:collectorKnob>
      <boolean:collectorKnob knob="cknob_save_stack_on_allocation">true</boolean:collectorKnob>
     </collector>
    </else>
   </rule>
   <rule>
    <ruleExpr>$stack_depth == 8</ruleExpr>
    <collector idToAppend="runtc">
     <int:collectorKnob knob="cknob_stack_depth">8</int:collectorKnob>
    </collector>
   </rule>
   <rule>
    <ruleExpr>$stack_depth == 16</ruleExpr>
    <collector idToAppend="runtc">
     <int:collectorKnob knob="cknob_stack_depth">16</int:collectorKnob>
    </collector>
   </rule>
   <rule>
    <ruleExpr>$stack_depth == 24</ruleExpr>
    <collector idToAppend="runtc">
     <int:collectorKnob knob="cknob_stack_depth">24</int:collectorKnob>
    </collector>
   </rule>
   <rule>
    <ruleExpr>$stack_depth == 32</ruleExpr>
    <collector idToAppend="runtc">
     <int:collectorKnob knob="cknob_stack_depth">32</int:collectorKnob>
    </collector>
   </rule>
   <rule>
    <ruleExpr>$appdebug == knob.appdebug.off</ruleExpr>
    <collector idToAppend="runtc">
     <collectorKnob knob="cknob_appdebug">runtc.cknob_appdebug.off</collectorKnob>
    </collector>
   </rule>
   <rule>
    <ruleExpr>$appdebug == knob.appdebug.on_error</ruleExpr>
    <collector idToAppend="runtc">
     <collectorKnob knob="cknob_appdebug">runtc.cknob_appdebug.on_error</collectorKnob>
    </collector>
   </rule>
   <rule>
    <ruleExpr>$appdebug == knob.appdebug.on_start</ruleExpr>
    <collector idToAppend="runtc">
     <collectorKnob knob="cknob_appdebug">runtc.cknob_appdebug.on_start</collectorKnob>
    </collector>
   </rule>
  </rules>
 </analysis>
</bag>
